#!/usr/bin/env bash
set -e

echo "üîç Running pre-push checks..."

# Get staged/changed Haskell files
changed_files=$(git diff --name-only --diff-filter=AM HEAD @{push} 2>/dev/null | grep '\.hs$' || true)

if [ -z "$changed_files" ]; then
  echo "‚úÖ No Haskell files changed"
  exit 0
fi

echo "üìù Formatting with fourmolu..."
echo "$changed_files" | xargs fourmolu -i

echo "üîç Applying hlint suggestions..."
echo "$changed_files" | while IFS= read -r file; do
  hlint "$file" --refactor --refactor-options="--inplace" 2>/dev/null || true
done

echo "üìù Reformatting after hlint..."
echo "$changed_files" | xargs fourmolu -i

# Check if changes were made
if ! git diff --quiet; then
  echo "‚ùå Formatting/linting made changes!"
  echo "   Files modified: $(git diff --name-only | tr '\n' ' ')"
  echo "   Please stage the changes and try again."
  exit 1
fi

echo "üî® Building with cabal to check for warnings/errors..."
if ! cabal build 2>&1 | tee /tmp/cabal-build.log; then
  echo "‚ùå Cabal build failed!"
  exit 1
fi

# Check for warnings (treat warnings as errors)
if grep -iE "warning:|Warning:" /tmp/cabal-build.log | grep -v "Git tree.*is dirty" | grep -v "ld: warning.*dylib"; then
  echo "‚ùå Build has warnings (warnings treated as errors)!"
  echo "   Fix warnings before pushing."
  exit 1
fi

echo "‚úÖ All checks passed!"

